version: '3.8'

services:
  # SQL Server Database
  sqlserver:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: sqlserver-express
    environment:
      - ACCEPT_EULA=Y
      - MSSQL_SA_PASSWORD=YourStrong@Passw0rd
    ports:
      - "1433:1433"
    volumes:
      - sqlserver_data:/var/opt/mssql
    networks:
      - app-network

  # MongoDB Database
  mongodb:
    image: mongo:latest
    container_name: mongodb
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    networks:
      - app-network

  # RabbitMQ (Message Queue)
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=admin
    ports:
      - "5672:5672"      # AMQP port
      - "15672:15672"    # Management UI
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - app-network

  # Web API Application
  api:
    build:
      context: ./SertaoArch
      dockerfile: SertaoArch.UserMi/SertaoArch.UserMi.Api/Dockerfile
    container_name: sertao-api
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ConnectionStrings__SqlServer=Server=sqlserver,1433;Database=ApiDb;User Id=sa;Password=YourStrong@Passw0rd;TrustServerCertificate=True;MultipleActiveResultSets=True;
      - QueueSettings__ConnectionString=amqp://admin:admin@rabbitmq:5672/
    ports:
      - "8080:8080"
    depends_on:
      - sqlserver
      - rabbitmq
    networks:
      - app-network
    restart: unless-stopped

  # Background Worker Service
  worker:
    build:
      context: ./SertaoArch
      dockerfile: SertaoArch.Worker/Dockerfile
    container_name: sertao-worker
    environment:
      - DOTNET_ENVIRONMENT=Production
      - ConnectionStrings__MongoDB=mongodb://mongodb:27017
      - DatabaseSettings__MongoDbName=WorkerDb
      - QueueSettings__ConnectionString=amqp://admin:admin@rabbitmq:5672/
    depends_on:
      - mongodb
      - rabbitmq
    networks:
      - app-network
    restart: unless-stopped

volumes:
  sqlserver_data:
  mongodb_data:
  rabbitmq_data:

networks:
  app-network:
    driver: bridge

